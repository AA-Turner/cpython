on:
  workflow_dispatch:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    timeout-minutes: 120
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: '2000'
    - name: Install Dependencies
      run: |
        sudo ./.github/workflows/posix-deps-apt.sh
        # Install clang-18
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 17  # gh-121946: llvm-18 package is temporarily broken
        sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-17 100
        sudo update-alternatives --set clang /usr/bin/clang-17
        sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-17 100
        sudo update-alternatives --set clang++ /usr/bin/clang++-17
    - name: Run bisect with check command bash
      run: |
        set -x
        cp ./test_crasher.py ./crasher.py
        cp ./.github/workflows/build.sh ./bisect_check.sh
        sudo chmod 777 ./crasher.py ./bisect_check.sh
        git rev-parse --verify --quiet 716ec4bfcf1a564db9936122c442baa99f9c4a8c^{commit}
        git bisect start
        git bisect bad $(git rev-parse HEAD)
        git bisect good 716ec4bfcf1a564db9936122c442baa99f9c4a8c
        BISECT_OUTPUT=$(git bisect run ./bisect_check.sh)
        echo "$BISECT_OUTPUT"
        FIRST_BAD_COMMIT=$(git rev-parse bisect/bad)
        git bisect log >> bisect_log.txt
        git bisect reset
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Bisect Log" >> $GITHUB_STEP_SUMMARY
        cat bisect_log.txt >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Bisect result" >> $GITHUB_STEP_SUMMARY
        if [[ -z "$FIRST_BAD_COMMIT" ]]; then
          echo "No bad commit found."
          echo "No bad commit found." >> $GITHUB_STEP_SUMMARY
        else
          DIFF_URL="https://github.com/aa-turner/cpython/commit/${FIRST_BAD_COMMIT}"
          echo "FIRST_BAD_COMMIT=$FIRST_BAD_COMMIT" >> $GITHUB_ENV
          echo "FIRST_BAD_COMMIT: [$FIRST_BAD_COMMIT]($DIFF_URL)" >> $GITHUB_STEP_SUMMARY
          ERROR_LOG=$(echo "$BISECT_OUTPUT" | awk '/first bad commit: first commit that fails/{flag=1; next} /Bisecting:/{flag=0} flag')
          echo "### Error log:" >> $GITHUB_STEP_SUMMARY
          echo "$ERROR_LOG" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Upload bisect_log.txt
      uses: actions/upload-artifact@v4.3.1
      with:
        name: bisect_log
        path: bisect_log.txt
